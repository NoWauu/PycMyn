# on regarde si le fantome se situe sur une intersection
        if len(directions) >= 2:
            # on fait en sorte que le fantome ne revienne pas sur ses pas
            if (self.direction + 2) % 4 in directions:
                directions.remove((self.direction + 2) % 4)
            new_direction = self.comportement(self.pos, directions)

        # s'il y a une nouvelle direction, on la met à jour
        if new_direction != -1:
            futur = CASE[new_direction](self.pos.xy, self.speed, self.dt)
            if not self.collide_wall(futur):
                self.pos.xy = futur

            self.direction = new_direction
        else:
            # sinon, on continue dans la même direction
            futur = CASE[self.direction](self.pos.xy, self.speed, self.dt)
            if not self.collide_wall(futur):
                self.pos.xy = futur
            # si on rencontre un mur
            # on change de direction
            else:
                self.contourne_mur()